# Generated by Django 4.1.6 on 2025-05-14 06:47

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('numCuenta', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^\\d{1,9}$', 'Debe tener entre 1 y 9 d√≠gitos')])),
                ('nombre', models.CharField(blank=True, default=' ', max_length=255)),
                ('primer_apellido', models.CharField(blank=True, default='', max_length=50)),
                ('segundo_apellido', models.CharField(blank=True, default='', max_length=50)),
                ('correoE', models.EmailField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9._%+-]+@ciencias\\.unam\\.mx$', 'Debe ser @ciencias.unam.mx')])),
                ('nombre_usuario', models.CharField(max_length=50, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
        ),
        migrations.CreateModel(
            name='Comentario',
            fields=[
                ('idComentario', models.AutoField(primary_key=True, serialize=False)),
                ('contenido', models.TextField()),
                ('fecha_creacion', models.DateField()),
                ('hora_creacion', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Grupo',
            fields=[
                ('codigo', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50)),
                ('descripcion', models.TextField(blank=True)),
                ('foto_portada', models.ImageField(blank=True, upload_to='grupos/')),
            ],
        ),
        migrations.CreateModel(
            name='Nominacion',
            fields=[
                ('idNominacion', models.AutoField(primary_key=True, serialize=False)),
                ('categoria', models.CharField(max_length=50)),
                ('descripcion', models.TextField(blank=True)),
                ('activa', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Perfil',
            fields=[
                ('idPerfil', models.AutoField(primary_key=True, serialize=False)),
                ('foto_perfil', models.ImageField(blank=True, upload_to='perfil/')),
                ('foto_portada', models.ImageField(blank=True, upload_to='portada/')),
                ('biografia', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tener',
            fields=[
                ('numCuenta', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Votar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alumnoVotado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votos_recibidos', to=settings.AUTH_USER_MODEL)),
                ('idNominacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.nominacion')),
                ('numCuenta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votos_emitidos', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Publicacion',
            fields=[
                ('idPublicacion', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_creacion', models.DateField()),
                ('hora_creacion', models.TimeField()),
                ('descripcion', models.TextField(blank=True)),
                ('imagen', models.ImageField(blank=True, upload_to='publicacion/')),
                ('video_url', models.URLField(blank=True, null=True)),
                ('numCuenta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Postular',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idNominacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.nominacion')),
                ('numCuenta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Poseer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idComentario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.comentario')),
                ('idPublicacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.publicacion')),
            ],
        ),
        migrations.CreateModel(
            name='Pertenecer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.grupo')),
                ('numCuenta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MarcoFoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marco_foto', models.TextField()),
                ('idPerfil', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.perfil')),
            ],
        ),
        migrations.CreateModel(
            name='Gestionar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.grupo')),
                ('numCuenta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ganar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('premio', models.TextField(blank=True)),
                ('activa', models.BooleanField(default=True)),
                ('idNominacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.nominacion')),
                ('numCuenta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Existe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateTimeField()),
                ('fecha_fin', models.DateTimeField()),
                ('codigo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.grupo')),
                ('idNominacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.nominacion')),
            ],
        ),
        migrations.AddField(
            model_name='comentario',
            name='idPerfil',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.perfil'),
        ),
        migrations.AddField(
            model_name='comentario',
            name='numCuenta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='nominacion',
            trigger=pgtrigger.compiler.Trigger(name='deactivate_ganar_on_nom_delete', sql=pgtrigger.compiler.UpsertTriggerSql(func='\n                    UPDATE app_ganar\n                       SET activa = FALSE\n                     WHERE idNominacion_id = OLD."idNominacion";\n                    RETURN OLD;\n                ', hash='fa536caae5765a52f4f2feb078c0c97703ad73fa', operation='DELETE', pgid='pgtrigger_deactivate_ganar_on_nom_delete_cfeea', table='app_nominacion', when='BEFORE')),
        ),
        migrations.AlterUniqueTogether(
            name='votar',
            unique_together={('numCuenta', 'idNominacion', 'alumnoVotado')},
        ),
        migrations.AddField(
            model_name='tener',
            name='idPerfil',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.perfil'),
        ),
        migrations.AlterUniqueTogether(
            name='postular',
            unique_together={('numCuenta', 'idNominacion')},
        ),
        migrations.AlterUniqueTogether(
            name='poseer',
            unique_together={('idComentario', 'idPublicacion')},
        ),
        migrations.AlterUniqueTogether(
            name='pertenecer',
            unique_together={('numCuenta', 'codigo')},
        ),
        migrations.AlterUniqueTogether(
            name='marcofoto',
            unique_together={('idPerfil', 'marco_foto')},
        ),
        migrations.AlterUniqueTogether(
            name='gestionar',
            unique_together={('numCuenta', 'codigo')},
        ),
        migrations.AlterUniqueTogether(
            name='ganar',
            unique_together={('idNominacion', 'numCuenta')},
        ),
        migrations.AddConstraint(
            model_name='existe',
            constraint=models.CheckConstraint(check=models.Q(('fecha_fin__gt', models.F('fecha_inicio'))), name='check_fecha_fin_posterior'),
        ),
        migrations.AlterUniqueTogether(
            name='existe',
            unique_together={('idNominacion', 'codigo')},
        ),
        migrations.AddConstraint(
            model_name='usuario',
            constraint=models.CheckConstraint(check=models.Q(('numCuenta__gte', 1), ('numCuenta__lte', 999999999)), name='ck_usuario_numCuenta_range'),
        ),
        migrations.AddConstraint(
            model_name='usuario',
            constraint=models.CheckConstraint(check=models.Q(('correoE__regex', '^[^@]+@ciencias\\.unam\\.mx$')), name='ck_usuario_correoE_domain'),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='usuario',
            trigger=pgtrigger.compiler.Trigger(name='anonymize_user_on_delete', sql=pgtrigger.compiler.UpsertTriggerSql(func='\n                    UPDATE app_usuario\n                       SET nombre = NULL,\n                           primer_apellido = NULL,\n                           segundo_apellido = NULL,\n                           correoE = NULL,\n                           nombre_usuario = NULL\n                     WHERE numCuenta = OLD."numCuenta";\n                    RETURN OLD;\n                ', hash='d5a56d244f5ed7b6ef68894a1fa5023df38fc1cb', operation='DELETE', pgid='pgtrigger_anonymize_user_on_delete_a4598', table='app_usuario', when='BEFORE')),
        ),
    ]
